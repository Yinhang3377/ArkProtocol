name: Rust CI

on:
  push:
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt_clippy:
    name: fmt + clippy (all features)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: rustc/cargo version
        run: |
          rustc -Vv
          cargo -V
      - name: cargo fmt --check
        run: cargo fmt --all -- --check
      - name: cargo clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  test:
    name: tests on ${{ matrix.os }} [features='${{ matrix.features }}']
    needs: fmt_clippy
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        features: ["", "backup", "hd", "hd backup"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --workspace --all-targets --verbose
      - name: Test (no extra features)
        if: matrix.features == ''
        run: cargo test --workspace --all-targets --no-fail-fast --verbose
      - name: Test (with '${{ matrix.features }}')
        if: matrix.features != ''
        run: cargo test --workspace --all-targets --no-fail-fast --features "${{ matrix.features }}" --verbose

  udeps:
    name: cargo-udeps (unused deps)
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-udeps
        run: cargo install cargo-udeps --locked
      - name: Check unused dependencies
        run: cargo +nightly udeps --all-targets --all-features